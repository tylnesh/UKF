/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplestringoccurerence;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author Michal Koh√∫tek
 */
public class ssoWindow extends javax.swing.JFrame implements ActionListener {

    String str;

    int num = 0;
    int seconds = 0;

    public ssoWindow() {

        // first thread - GUI and animatiom
        JLabel imageLabel = new JLabel();

        try {
            setDefaultCloseOperation(EXIT_ON_CLOSE);

            ImageIcon ii = new ImageIcon("res/img/animated.gif", "mooon");
            imageLabel.setIcon(ii);

            JLabel animatedLabel = new JLabel(ii);
            this.getContentPane().add(animatedLabel);
            this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.pack();
            this.setLocationRelativeTo(null);
            this.setVisible(true);

            //second thread - clock
            Thread clock = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (;;) {
                        try {
                            Thread.sleep(1000);
                            seconds++;
                            secondsLabel.setText("Seconds passed: " + seconds);
                            //System.out.println(seconds);

                        } catch (InterruptedException e) {

                            e.printStackTrace();
                        }
                    }
                }
            });
            clock.start();
            setDefaultCloseOperation(EXIT_ON_CLOSE);
            initComponents();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFileChooser = new javax.swing.JFileChooser();
        searchButton = new javax.swing.JButton();
        resultsLabel = new javax.swing.JLabel();
        secondsLabel = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        searchProgress = new javax.swing.JProgressBar();
        jSeparator1 = new javax.swing.JSeparator();

        txtFileChooser.setApproveButtonText("Search");
        txtFileChooser.setDialogTitle("Searching in: ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple String Occurence");
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 360, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(360, 400));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        resultsLabel.setText("Results: 0");

        secondsLabel.setText("Seconds passed: 0");

        searchTextField.setToolTipText("Enter your search here");
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resultsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondsLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchButton))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(searchProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(238, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondsLabel))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        if (txtFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            // Third thread - searches through file and counts occurences
            new Thread() {
                public void run() {
                    try {
                        File seachFile = txtFileChooser.getSelectedFile();
                        long fileLength = seachFile.length();

                        int index = 0;

                        setTitle("Searching in  " + seachFile.getName());
                        try {
                            searchProgress.setMinimum(0);
                            searchProgress.setMaximum((int) fileLength);
                            str = searchTextField.getText();
                            //System.out.println("Your string:: " +str); //checking textfield
                            BufferedReader br = new BufferedReader(new FileReader(seachFile));
                            String ln = null;

                            while ((ln = br.readLine()) != null) {
                                // processes lines

                                index += ln.length();  // moves progressbar
                                searchProgress.setValue(index);

                                //this.sleep(10);
                                //System.out.println(count (ln,str)); // checking count
                                num += count(ln, str);  //counts up occurences
                            }
                            br.close();
                        } catch (Exception ex) {
                            System.err.println(ex.getMessage());
                            //t1.stop();
                        }
                        searchProgress.setValue((int) fileLength);
                        //pm.close(); // needs better error handling, of course...
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    System.out.println(num);
                    resultsLabel.setText("Results:" + num);

                }
            }.start();


    }//GEN-LAST:event_searchButtonActionPerformed
    }
    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ssoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ssoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ssoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ssoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ssoWindow().setVisible(true);
            }
        });
    }

    public static int count(final String string, final String substring) {
        int count = 0;
        int idx = 0;

        while ((idx = string.indexOf(substring, idx)) != -1) {
            idx++;
            count++;
        }

        return count;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel resultsLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JProgressBar searchProgress;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel secondsLabel;
    private javax.swing.JFileChooser txtFileChooser;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
